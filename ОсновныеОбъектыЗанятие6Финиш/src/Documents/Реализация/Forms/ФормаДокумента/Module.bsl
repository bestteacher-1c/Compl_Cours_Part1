
&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Товары.ТекущиеДанные;

	ПересчетСуммыСтроки(СтруктураДанныхТекущейСтроки);

КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Товары.ТекущиеДанные;

	ПересчетСуммыСтроки(СтруктураДанныхТекущейСтроки);


КонецПроцедуры

&НаКлиенте
Процедура ТоварыСуммаПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Товары.ТекущиеДанные;

	Если СтруктураДанныхТекущейСтроки.Количество <> 0 Тогда

		СтруктураДанныхТекущейСтроки.Цена = СтруктураДанныхТекущейСтроки.Сумма / СтруктураДанныхТекущейСтроки.Количество;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Услуги.ТекущиеДанные;

	ПересчетСуммыСтроки(СтруктураДанныхТекущейСтроки);


КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Услуги.ТекущиеДанные;

	ПересчетСуммыСтроки(СтруктураДанныхТекущейСтроки);


КонецПроцедуры

&НаКлиенте
Процедура УслугиСуммаПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Услуги.ТекущиеДанные;

	Если СтруктураДанныхТекущейСтроки.Количество <> 0 Тогда

		СтруктураДанныхТекущейСтроки.Цена = СтруктураДанныхТекущейСтроки.Сумма / СтруктураДанныхТекущейСтроки.Количество;

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	ПересчетСуммыДокумента();


КонецПроцедуры


&НаКлиенте
Процедура ТоварыПослеУдаления(Элемент)

	ПересчетСуммыДокумента();


КонецПроцедуры

&НаКлиенте
Процедура УслугиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	ПересчетСуммыДокумента();


КонецПроцедуры

&НаКлиенте
Процедура УслугиПослеУдаления(Элемент)

	ПересчетСуммыДокумента();


КонецПроцедуры

&НаКлиенте
Процедура ПересчетСуммыДокумента()

	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");

КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)

	СтруктураДанныхТекущейСтроки = Элементы.Товары.ТекущиеДанные;

	ТоварыНоменклатураПриИзмененииНаСервере(
	СтруктураДанныхТекущейСтроки.Номенклатура, СтруктураДанныхТекущейСтроки.ЕдиницаИзмерения, Объект.Контрагент,
		СтруктураДанныхТекущейСтроки.Цена, Объект.Дата);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТоварыНоменклатураПриИзмененииНаСервере(СсылкаНаНоменклатуру, СсылкаНаЕдиницуИзмерения, СсылкаНаКонтрагента,
	Цена, Дата)

	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.ОсновнаяЕдиницаИзмерения
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка", СсылкаНаНоменклатуру);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	ВыборкаДетальныеЗаписи.Следующий();

	СсылкаНаЕдиницуИзмерения = ВыборкаДетальныеЗаписи.ОсновнаяЕдиницаИзмерения;

	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	НашиЦеныСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.НашиЦены.СрезПоследних(&Период, Номенклатура = &Номенклатура
	|	И Контрагент = &Контрагент) КАК НашиЦеныСрезПоследних";

	Запрос.УстановитьПараметр("Период", Дата);

	Запрос.УстановитьПараметр("Контрагент", СсылкаНаКонтрагента);

	Запрос.УстановитьПараметр("Номенклатура", СсылкаНаНоменклатуру);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Цена = ВыборкаДетальныеЗаписи.Цена;

	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПересчетСуммыСтроки(СтрокаТаблицы)

	СтрокаТаблицы.Сумма = СтрокаТаблицы.Количество * СтрокаТаблицы.Цена;

КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	ПересчетСуммСтрокТаблицИСуммыДокумента();

КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)

	ПересчетСуммСтрокТаблицИСуммыДокумента();


КонецПроцедуры

&НаСервере
Процедура ПересчетСуммСтрокТаблицИСуммыДокумента()

//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
// Данный фрагмент построен конструктором.
// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!

	Запрос = Новый Запрос;

	Запрос.Текст =
	"ВЫБРАТЬ
	|	НашиЦеныСрезПоследних.Номенклатура,
	|	НашиЦеныСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.НашиЦены.СрезПоследних(&Период, Контрагент = &Контрагент) КАК НашиЦеныСрезПоследних";

	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);

	Запрос.УстановитьПараметр("Период", Объект.Дата);

	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		СтруктураДляПоискаСтроки = Новый Структура("Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);

		МассивСтрокТаблицыТовары = Объект.Товары.НайтиСтроки(СтруктураДляПоискаСтроки);

		Если МассивСтрокТаблицыТовары.Количество() > 0 Тогда

			Для Каждого ТекСтрока Из МассивСтрокТаблицыТовары Цикл

				ТекСтрока.Цена = ВыборкаДетальныеЗаписи.Цена;

				ТекСтрока.Сумма = ТекСтрока.Цена * ТекСтрока.Количество;

			КонецЦикла;

		КонецЕсли;


		МассивСтрокТаблицыУслуги = Объект.Услуги.НайтиСтроки(СтруктураДляПоискаСтроки);

		Если МассивСтрокТаблицыУслуги.Количество() > 0 Тогда

			Для Каждого ТекСтрока Из МассивСтрокТаблицыУслуги Цикл

				ТекСтрока.Цена = ВыборкаДетальныеЗаписи.Цена;

				ТекСтрока.Сумма = ТекСтрока.Цена * ТекСтрока.Количество;

			КонецЦикла;

		КонецЕсли;

		Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");

	КонецЦикла;

//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры

&НаСервере
Процедура ПечатьНакладнойНаСервере(ТабДок)
	ТабДок = Новый ТабличныйДокумент();
	Макет = Документы.Реализация.ПолучитьМакет("МакетРеализации");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовокСтроки = Макет.ПолучитьОбласть("ЗаголовокСтроки");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Реализация.Дата,
		|	Реализация.Номер,
		|	Реализация.Контрагент,
		|	Реализация.КонтактноеЛицо,
		|	Реализация.Товары.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура,
		|		ЕдиницаИзмерения,
		|		Серия,
		|		Количество,
		|		Цена,
		|		Сумма),
		|	Реализация.Услуги.(
		|		Ссылка,
		|		НомерСтроки,
		|		Номенклатура,
		|		Количество,
		|		Цена,
		|		Сумма)
		|ИЗ
		|	Документ.Реализация КАК Реализация
		|ГДЕ
		|	Реализация.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ОбластьШапка.Параметры.Номер = ВыборкаДетальныеЗаписи.Номер;
		ОбластьШапка.Параметры.Дата = Формат(ВыборкаДетальныеЗаписи.Дата, "ДЛФ=DD;");
		ОбластьШапка.Параметры.Контрагент = ВыборкаДетальныеЗаписи.Контрагент;
		ОбластьШапка.Параметры.КонтактноеЛицо = ВыборкаДетальныеЗаписи.КонтактноеЛицо;

		ТабДок.Вывести(ОбластьШапка);
		ТабДок.Вывести(ОбластьЗаголовокСтроки);
		
		ИтогоСумма = 0;
		
		ВыборкаТовары = ВыборкаДетальныеЗаписи.Товары.Выбрать();
		
		Пока ВыборкаТовары.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаТовары);
			ТабДок.Вывести(ОбластьСтрока);
			
			ИтогоСумма = ИтогоСумма + ВыборкаТовары.Сумма;
			
		КонецЦикла;
		
		
		ВыборкаУслуги = ВыборкаДетальныеЗаписи.Услуги.Выбрать();
	
		Пока ВыборкаУслуги.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаУслуги);
			ТабДок.Вывести(ОбластьСтрока);

			ИтогоСумма = ИтогоСумма + ВыборкаУслуги.Сумма;
			
		КонецЦикла;
		
		ОбластьПодвал.Параметры.ИтогоСумма = ИтогоСумма;
		
		ТабДок.Вывести(ОбластьПодвал);

	КонецЦикла;
	

КонецПроцедуры

&НаКлиенте
Процедура ПечатьНакладной(Команда)
	
	ТабДок = Новый ТабличныйДокумент();
	
	ПечатьНакладнойНаСервере(ТабДок);
	
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	
	ТабДок.Показать();
	
КонецПроцедуры
